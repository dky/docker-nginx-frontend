proxy_cache_path /var/lib/nginx/cache levels=1:2 keys_zone=nginx_cache:30m inactive=30d max_size=1G;

log_format my_log '$remote_addr $host "$request" $status $bytes_sent "$http_referer" "$http_user_agent"';
access_log off;

server {
  access_log /var/log/nginx/access.log my_log;
  listen 80 default_server;
  server_name _;
  return 444;
}

resolver 172.18.0.1;

{{ range $service_name := ls "config/nginx/services" }}

{{ scratch.Set ( printf "service_%s_" $service_name.Key ) "1" }}

upstream {{ $service_name.Key }}-upstream  {
{{ if service $service_name.Key }}
{{ range $service_local := service $service_name.Key }}
{{ if gt $service_local.Port 0 }}
  server {{ $service_local.Address }}:{{ $service_local.Port }};
{{ end }}
{{ end }}
{{ if keyExists ( printf "config/%s/port" $service_name.Key ) }}
  server {{ if keyExists ( printf "config/%s/host" $service_name.Key ) }}{{ key ( printf "config/%s/host" $service_name.Key ) }}{{ else }}{{ $service_name.Key }}{{ end }}.weave.local:{{ key ( printf "config/%s/port" $service_name.Key ) }} backup;
{{ end }}
{{ else }}
{{ if keyExists ( printf "config/%s/port" $service_name.Key ) }}
  server {{ if keyExists ( printf "config/%s/host" $service_name.Key ) }}{{ key ( printf "config/%s/host" $service_name.Key ) }}{{ else }}{{ $service_name.Key }}{{ end }}.weave.local:{{ key ( printf "config/%s/port" $service_name.Key ) }};
{{ end }}
{{ end }}
}

{{ if keyExists ( printf "config/%s/nginx/server_name" $service_name.Key ) }}
{{ $server_name := key ( printf "config/%s/nginx/server_name" $service_name.Key ) }}
server {
  access_log /var/log/nginx/access.log my_log;

  server_name {{ $server_name }};
  listen 80;

{{ if keyExists ( printf "config/%s/nginx/client_max_body_size" $service_name.Key ) }}
  client_max_body_size {{ key ( printf "config/%s/nginx/client_max_body_size" $service_name.Key ) }};
{{ end }}

  location / {
{{ if keyExists ( printf "config/%s/nginx/only_ssl" $service_name.Key ) }}

    return 301 https://{{ $server_name }}$request_uri;

{{ else }}

{{ if eq ( key_or_default ( printf "config/%s/nginx/restrict" $service_name.Key ) "0" ) "1" }}
{{ range ls "config/home_ips" }}
    allow {{ .Value }};
{{ end }}
    deny all;
{{ end }}

    proxy_set_header Host $host;
    proxy_pass http://{{ $service_name.Key }}-upstream;

{{ end }}
  }

  location /.well-known/acme-challenge/ {
    set $simp_le_endpoint http://simp-le.weave.local:80;
    proxy_set_header Host $host;
    proxy_pass $simp_le_endpoint;
  }
}

{{ range $cert_host := secrets ( printf "%s/" "secret/certificates" ) }}
{{ if eq $cert_host ( printf "%s/" $server_name ) }}
server {
  access_log /var/log/nginx/access.log my_log;

  server_name {{ $server_name }};
  listen 443 ssl;

  {{ with secret ( printf "%s/%sfullchain" "secret/certificates" $cert_host )}}
  {{ plugin "store.sh" ( printf "/etc/nginx/certificates/%s/fullchain.pem" $server_name ) ( printf "%s" .Data.value ) }}
  {{ end }}

  {{ with secret ( printf "%s/%skey" "secret/certificates" $cert_host )}}
  {{ plugin "store.sh" ( printf "/etc/nginx/certificates/%s/key.pem" $server_name ) ( printf "%s" .Data.value ) }}
  {{ end }}

  {{ with secret ( printf "%s/%sdhparams" "secret/certificates" $cert_host )}}
  {{ plugin "store.sh" ( printf "/etc/nginx/certificates/%s/dhparams.pem" $server_name ) ( printf "%s" .Data.value ) }}
  {{ end }}

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate /etc/nginx/certificates/{{ $server_name }}/fullchain.pem;
  ssl_certificate_key /etc/nginx/certificates/{{ $server_name }}/key.pem;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/certificates/{{ $server_name }}/dhparams.pem;
  ssl_session_cache shared:{{ $server_name }}:10m;

{{ if keyExists ( printf "config/%s/nginx/client_max_body_size" $service_name.Key ) }}
  client_max_body_size {{ key ( printf "config/%s/nginx/client_max_body_size" $service_name.Key ) }};
{{ end }}

{{ if eq ( key_or_default ( printf "config/%s/nginx/restrict" $service_name.Key ) "0" ) "1" }}
{{ range ls "config/home_ips" }}
    allow {{ .Value }};
{{ end }}
    deny all;
{{ end }}

  location / {
    proxy_set_header Host $host;
    proxy_pass http://{{ $service_name.Key }}-upstream;
  }
}
{{ end }}{{ end }}
{{ end }}

{{ range $server_name := ls ( printf "config/%s/nginx/server_names" $service_name.Key ) }}

{{ if or ( keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name.Key $server_name.Value ) ) ( keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name_http" $service_name.Key $server_name.Value ) ) }}
server {
  access_log /var/log/nginx/access.log my_log;

  listen 80;

{{ if keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name_http" $service_name.Key $server_name.Value ) }}
  server_name {{ key ( printf "config/%s/nginx/server_name_configs/%s/server_name_http" $service_name.Key $server_name.Value ) }};
{{ else if keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name.Key $server_name.Value ) }}
  server_name {{ key ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name.Key $server_name.Value ) }};
{{ else }}
  server_name {{ $server_name.Value }};
{{ end }}

{{ if eq ( key_or_default ( printf "config/%s/nginx/restrict" $service_name.Key ) "0" ) "1" }}
{{ range ls "config/home_ips" }}
  allow {{ .Value }};
{{ end }}
  deny all;
{{ end }}

{{ if keyExists ( printf "config/%s/nginx/server_name_configs/%s/config" $service_name.Key $server_name.Value ) }}
{{ key ( printf "config/%s/nginx/server_name_configs/%s/config" $service_name.Key $server_name.Value ) }}
{{ end }}

{{ if keyExists ( printf "config/%s/nginx/server_name_configs/%s/config_http" $service_name.Key $server_name.Value ) }}
{{ key ( printf "config/%s/nginx/server_name_configs/%s/config_http" $service_name.Key $server_name.Value ) }}
{{ end }}

  location /.well-known/acme-challenge/ {
    allow all;
    set $simp_le_endpoint http://simp-le.weave.local:80;
    proxy_set_header Host $host;
    proxy_pass $simp_le_endpoint;
  }
}
{{ end }}

{{ if or ( keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name.Key $server_name.Value ) ) ( keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name_https" $service_name.Key $server_name.Value ) ) }}
{{ range $cert_host := secrets ( printf "%s/" "secret/certificates" ) }}
{{ if eq $cert_host ( printf "%s/" $server_name.Value ) }}
server {
  access_log /var/log/nginx/access.log my_log;

  listen 443 ssl;

{{ if keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name_https" $service_name.Key $server_name.Value ) }}
  server_name {{ key ( printf "config/%s/nginx/server_name_configs/%s/server_name_https" $service_name.Key $server_name.Value ) }};
{{ else if keyExists ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name.Key $server_name.Value ) }}
  server_name {{ key ( printf "config/%s/nginx/server_name_configs/%s/server_name" $service_name.Key $server_name.Value ) }};
{{ else }}
  server_name {{ $server_name.Value }};
{{ end }}

  {{ with secret ( printf "%s/%sfullchain" "secret/certificates" $cert_host )}}
  {{ plugin "store.sh" ( printf "/etc/nginx/certificates/%s/fullchain.pem" $server_name.Value ) ( printf "%s" .Data.value ) }}
  {{ end }}

  {{ with secret ( printf "%s/%skey" "secret/certificates" $cert_host )}}
  {{ plugin "store.sh" ( printf "/etc/nginx/certificates/%s/key.pem" $server_name.Value ) ( printf "%s" .Data.value ) }}
  {{ end }}

  {{ with secret ( printf "%s/%sdhparams" "secret/certificates" $cert_host )}}
  {{ plugin "store.sh" ( printf "/etc/nginx/certificates/%s/dhparams.pem" $server_name.Value ) ( printf "%s" .Data.value ) }}
  {{ end }}

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate /etc/nginx/certificates/{{ $server_name.Value }}/fullchain.pem;
  ssl_certificate_key /etc/nginx/certificates/{{ $server_name.Value }}/key.pem;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/certificates/{{ $server_name.Value }}/dhparams.pem;
  ssl_session_cache shared:{{ $server_name.Value }}:10m;

{{ if eq ( key_or_default ( printf "config/%s/nginx/restrict" $service_name.Key ) "0" ) "1" }}
{{ range ls "config/home_ips" }}
  allow {{ .Value }};
{{ end }}
  deny all;
{{ end }}

{{ if keyExists ( printf "config/%s/nginx/server_name_configs/%s/config" $service_name.Key $server_name.Value ) }}
{{ key ( printf "config/%s/nginx/server_name_configs/%s/config" $service_name.Key $server_name.Value ) }}
{{ end }}

{{ if keyExists ( printf "config/%s/nginx/server_name_configs/%s/config_https" $service_name.Key $server_name.Value ) }}
{{ key ( printf "config/%s/nginx/server_name_configs/%s/config_https" $service_name.Key $server_name.Value ) }}
{{ end }}

}
{{ end }}{{ end }}{{ end }}

{{ end }}

{{ end }}
